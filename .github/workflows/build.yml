name: Lint and Test Workflow

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

  workflow_dispatch:


jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.8.9"

    - name: Install Dependencies
      run: |
        uv python install
        uv sync --group lint

    - name: Run Linter
      run: |
        uv run --frozen --no-sync poe format

  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.8.9"

    - name: Install Dependencies
      run: |
        uv python install
        uv sync --group test

    - name: Run Tests
      run: |
        uv run --frozen --no-sync poe test

    - name: Test Report
      uses: dorny/test-reporter@v2
      if: ${{ !cancelled() }}
      with:
        name: Pytests Tests
        path: pytest-report.xml
        reporter: jest-junit
        
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5
      if: ${{ !cancelled() }}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.organization=elc-github
          -Dsonar.projectKey=ELC_fastapi-production-template
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.python.version=3.12
          -Dsonar.sources=src
          -Dsonar.tests=tests
          -Dsonar.python.xunit.reportPath=pytest-report.xml
          -Dsonar.coverage.exclusions="**/__main__.py, src/app/api/__init__.py, src/app/frontend/**, src/app/settings.py"

    - name: Check Coverage
      run: |
        uv run --frozen --no-sync poe check-coverage
